install.packages("git2r")
setwd("~/carAccidents")
install.packages("devtools")
devtools::create(".")
usethis::use_data()
usethis::use_data_raw()
library(readr)
install.packages("readr")
library(readr)
Crash_Reporting_Drivers_Data_20241126 <- read_csv("Crash_Reporting_-_Drivers_Data_20241126.csv")
View(Crash_Reporting_Drivers_Data_20241126)
library(readr)
Crash_Reporting_Incidents_Data_20241126 <- read_csv("Crash_Reporting_-_Incidents_Data_20241126.csv")
View(Crash_Reporting_Incidents_Data_20241126)
library(readr)
Crash_Reporting_Non_Motorists_Data_20241126 <- read_csv("Crash_Reporting_-_Non-Motorists_Data_20241126.csv")
View(Crash_Reporting_Non_Motorists_Data_20241126)
Crash_Reporting_Non_Motorists<- read_csv("Crash_Reporting_-_Non-Motorists_Data_20241126.csv")
library(readr)
Crash_Reporting_Drivers<- read_csv("Crash_Reporting_-_Drivers_Data_20241126.csv")
Crash_Reporting_DriversIncidents <-  read_csv("Crash_Reporting_-_Incidents_Data_20241126.csv")
load("~/carAccidents/data/Crash_Reporting_Drivers.rda")
load("~/carAccidents/data/Crash_Reporting_DriversIncidents.rda")
load("~/carAccidents/data/Crash_Reporting_Non_Motorists.rda")
# Load necessary libraries
library(dplyr)       # For data manipulation
library(stringr)     # For string operations
library(tidytext)
# Function to identify the most common words in a free text column and add new groups based on these words
common_words(Crash_Reporting_Non_Motorists, "Off-Road Description", 5)
devtools::load_all(".")
View(Crash_Reporting_Non_Motorists)
as.POSIXct("08/29/2023 02:00:00 PM")
as.POSIXct("08/29/2023 02:00:00 PM", "%m/%d/%Y %H:%M:%S)
)
)
as.POSIXct("08/29/2023 02:00:00 PM", format =  "%m/%d/%Y %H:%M:%S')
)
)
as.POSIXct("08/29/2023 02:00:00 PM", format =  "%m/%d/%Y %H:%M:%S")
Crash_Reporting_Drivers$`Crash Date/Time` <-  as.POSIXct(Crash_Reporting_Drivers$`Crash Date/Time`, format =  "%m/%d/%Y %H:%M:%S")
Crash_Reporting_DriversIncidents$`Crash Date/Time` <-
as.POSIXct(Crash_Reporting_DriversIncidents$`Crash Date/Time`, format =  "%m/%d/%Y %H:%M:%S")
Crash_Reporting_Non_Motorists$`Crash Date/Time` <-
as.POSIXct(Crash_Reporting_Non_Motorists$`Crash Date/Time`, format =  "%m/%d/%Y %H:%M:%S")
View(Crash_Reporting_DriversIncidents)
View(Crash_Reporting_Drivers)
unique(Crash_Reporting_Drivers$`Driver At Fault`)
View(Crash_Reporting_DriversIncidents)
View(Crash_Reporting_Non_Motorists)
Crash_Reporting_Non_Motorists$`Injury Severity`
unique(Crash_Reporting_Non_Motorists$`Injury Severity`)
Crash_Reporting_Non_Motorists <- Crash_Reporting_Non_Motorists %>%
dplyr::mutate(
Severity_Category = case_when(
str_detect(str_to_lower(Crash_Severity), "fatal") ~ "Fatal",
str_detect(str_to_lower(Crash_Severity), "injury|apparent") ~ "Non-Fatal",
TRUE ~ NA_character_ # For unmatched or missing values
)
)
Crash_Reporting_Non_Motorists <- Crash_Reporting_Non_Motorists %>%
dplyr::mutate(
Severity_Category = case_when(
str_detect(str_to_lower(`Injury Severity`), "fatal") ~ "Fatal",
str_detect(str_to_lower(`Injury Severity`), "injury|apparent") ~ "Non-Fatal",
TRUE ~ NA_character_ # For unmatched or missing values
)
)
Crash_Reporting_Non_Motorists <- Crash_Reporting_Non_Motorists %>%
dplyr::mutate(
Severity_Category = case_when(
str_detect(str_to_lower(`Injury Severity`), "fatal") ~ "Fatal",
str_detect(str_to_lower(`Injury Severity`), "injury|apparent") ~ "Non-Fatal",
TRUE ~ NA_character_ # For unmatched or missing values
)
)
write.csv(Crash_Reporting_Non_Motorists, "Crash_Reporting_Non_Motorists.csv")
write.csv(Crash_Reporting_Non_Motorists, "Crash_Reporting_Non_Motorists.csv")
write.csv(Crash_Reporting_DriversIncidents, "Crash_Reporting_DriversIncidents.csv")
write.csv(Crash_Reporting_Drivers, "Crash_Reporting_Drivers.csv")
Crash_Reporting_Non_Motorists <- Crash_Reporting_Non_Motorists %>%
mutate(Safety_Equipment_Group = case_when(
# Identifying 'None', 'N/A', and 'Unknown' as the "None" group
str_detect(`Safety Equipment`, regex("none|n/a|unknown", ignore_case = TRUE)) ~ "None",
# Grouping equipment related to helmets
str_detect(`Safety Equipment`, regex("helmet", ignore_case = TRUE)) ~ "Helmet-related",
# Grouping equipment related to lighting
str_detect(`Safety Equipment`, regex("lighting", ignore_case = TRUE)) ~ "Lighting-related",
# Grouping equipment related to reflective items
str_detect(`Safety Equipment`, regex("reflective", ignore_case = TRUE)) ~ "Reflective-related",
# Grouping protective pads, e.g., elbow/knee pads
str_detect(`Safety Equipment`, regex("protective pads", ignore_case = TRUE)) ~ "Protective Pads",
# Grouping any other safety equipment
str_detect(`Safety Equipment`, regex("other", ignore_case = TRUE)) ~ "Other",  # "Other" group for any remaining
TRUE ~ "Other"  # Default case to handle any unmatched entries
))
View(Crash_Reporting_Non_Motorists)
View(Crash_Reporting_Drivers)
setwd("~/jakubFo")
setwd("~/publicHealthMaryland")
devtools::create(".")
